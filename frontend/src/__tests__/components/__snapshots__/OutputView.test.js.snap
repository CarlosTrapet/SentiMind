// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OutputView renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OutputView
    average_sentiment="negative"
    handleSubmit={[Function]}
    sentiments={
        Object {
            "negative": 0,
            "neutral": 0,
            "positive": 0,
          }
    }
    top_tweets={
        Object {
            "negative": "02392039420",
            "positive": "102389292",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <SubHeader
                    id="positiveTweet-subheader"
                    subHeaderText="Most Positive Tweet"
          />
          <TwitterTweetEmbed
                    id="positiveTweet"
                    tweetId="102389292"
          />
</div>,
        <div>
          <SubHeader
                    id="main-subheader"
                    subHeaderText="So, the world thinks..."
          />
          <Sentiment
                    average_sentiment="negative"
          />
          <BarChart
                    axes={false}
                    axisLabels={
                              Object {
                                        "x": "",
                                        "y": "",
                                      }
                    }
                    barWidth={10}
                    clickHandler={[Function]}
                    data={
                              Array [
                                        Object {
                                          "color": "green",
                                          "x": "Positive",
                                          "y": 0,
                                        },
                                        Object {
                                          "color": "yellow",
                                          "x": "Neutral",
                                          "y": 0,
                                        },
                                        Object {
                                          "color": "red",
                                          "x": "Negative",
                                          "y": 0,
                                        },
                                      ]
                    }
                    datePattern="%d-%b-%y"
                    height={350}
                    interpolate="linear"
                    lineData={Array []}
                    mouseMoveHandler={[Function]}
                    mouseOutHandler={[Function]}
                    mouseOverHandler={[Function]}
                    width={650}
                    xType="text"
                    y2Type="linear"
                    yType="linear"
          />
          <div
                    className="inner-grid"
          >
                    <p />
                    <p />
                    <p />
          </div>
          <PieChart
                    clickHandler={[Function]}
                    data={
                              Array [
                                        Object {
                                          "key": "Positive",
                                          "value": undefined,
                                        },
                                        Object {
                                          "key": "Negative",
                                          "value": NaN,
                                        },
                                      ]
                    }
                    innerHoleSize={0}
                    labels={true}
                    mouseMoveHandler={[Function]}
                    mouseOutHandler={[Function]}
                    mouseOverHandler={[Function]}
                    padding={2}
                    size={400}
                    styles={Object {}}
          />
          <Button
                    buttonText="Choose another topic"
                    handleSubmit={[Function]}
          />
</div>,
        <div>
          <SubHeader
                    id="negativeTweet-subheader"
                    subHeaderText="Most Negative Tweet"
          />
          <TwitterTweetEmbed
                    id="negativeTweet"
                    tweetId="02392039420"
          />
</div>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SubHeader
              id="positiveTweet-subheader"
              subHeaderText="Most Positive Tweet"
/>,
            <TwitterTweetEmbed
              id="positiveTweet"
              tweetId="102389292"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "id": "positiveTweet-subheader",
              "subHeaderText": "Most Positive Tweet",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "positiveTweet",
              "tweetId": "102389292",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SubHeader
              id="main-subheader"
              subHeaderText="So, the world thinks..."
/>,
            <Sentiment
              average_sentiment="negative"
/>,
            <BarChart
              axes={false}
              axisLabels={
                            Object {
                                          "x": "",
                                          "y": "",
                                        }
              }
              barWidth={10}
              clickHandler={[Function]}
              data={
                            Array [
                                          Object {
                                            "color": "green",
                                            "x": "Positive",
                                            "y": 0,
                                          },
                                          Object {
                                            "color": "yellow",
                                            "x": "Neutral",
                                            "y": 0,
                                          },
                                          Object {
                                            "color": "red",
                                            "x": "Negative",
                                            "y": 0,
                                          },
                                        ]
              }
              datePattern="%d-%b-%y"
              height={350}
              interpolate="linear"
              lineData={Array []}
              mouseMoveHandler={[Function]}
              mouseOutHandler={[Function]}
              mouseOverHandler={[Function]}
              width={650}
              xType="text"
              y2Type="linear"
              yType="linear"
/>,
            <div
              className="inner-grid"
>
              <p />
              <p />
              <p />
</div>,
            <PieChart
              clickHandler={[Function]}
              data={
                            Array [
                                          Object {
                                            "key": "Positive",
                                            "value": undefined,
                                          },
                                          Object {
                                            "key": "Negative",
                                            "value": NaN,
                                          },
                                        ]
              }
              innerHoleSize={0}
              labels={true}
              mouseMoveHandler={[Function]}
              mouseOutHandler={[Function]}
              mouseOverHandler={[Function]}
              padding={2}
              size={400}
              styles={Object {}}
/>,
            <Button
              buttonText="Choose another topic"
              handleSubmit={[Function]}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "id": "main-subheader",
              "subHeaderText": "So, the world thinks...",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "average_sentiment": "negative",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "axes": false,
              "axisLabels": Object {
                "x": "",
                "y": "",
              },
              "barWidth": 10,
              "clickHandler": [Function],
              "data": Array [
                Object {
                  "color": "green",
                  "x": "Positive",
                  "y": 0,
                },
                Object {
                  "color": "yellow",
                  "x": "Neutral",
                  "y": 0,
                },
                Object {
                  "color": "red",
                  "x": "Negative",
                  "y": 0,
                },
              ],
              "datePattern": "%d-%b-%y",
              "height": 350,
              "interpolate": "linear",
              "lineData": Array [],
              "mouseMoveHandler": [Function],
              "mouseOutHandler": [Function],
              "mouseOverHandler": [Function],
              "width": 650,
              "xType": "text",
              "y2Type": "linear",
              "yType": "linear",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p />,
                <p />,
                <p />,
              ],
              "className": "inner-grid",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                },
                "ref": null,
                "rendered": 0,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                },
                "ref": null,
                "rendered": 0,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                },
                "ref": null,
                "rendered": 0,
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "clickHandler": [Function],
              "data": Array [
                Object {
                  "key": "Positive",
                  "value": undefined,
                },
                Object {
                  "key": "Negative",
                  "value": NaN,
                },
              ],
              "innerHoleSize": 0,
              "labels": true,
              "mouseMoveHandler": [Function],
              "mouseOutHandler": [Function],
              "mouseOverHandler": [Function],
              "padding": 2,
              "size": 400,
              "styles": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "buttonText": "Choose another topic",
              "handleSubmit": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SubHeader
              id="negativeTweet-subheader"
              subHeaderText="Most Negative Tweet"
/>,
            <TwitterTweetEmbed
              id="negativeTweet"
              tweetId="02392039420"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "id": "negativeTweet-subheader",
              "subHeaderText": "Most Negative Tweet",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "negativeTweet",
              "tweetId": "02392039420",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <SubHeader
                        id="positiveTweet-subheader"
                        subHeaderText="Most Positive Tweet"
            />
            <TwitterTweetEmbed
                        id="positiveTweet"
                        tweetId="102389292"
            />
</div>,
          <div>
            <SubHeader
                        id="main-subheader"
                        subHeaderText="So, the world thinks..."
            />
            <Sentiment
                        average_sentiment="negative"
            />
            <BarChart
                        axes={false}
                        axisLabels={
                                    Object {
                                                "x": "",
                                                "y": "",
                                              }
                        }
                        barWidth={10}
                        clickHandler={[Function]}
                        data={
                                    Array [
                                                Object {
                                                  "color": "green",
                                                  "x": "Positive",
                                                  "y": 0,
                                                },
                                                Object {
                                                  "color": "yellow",
                                                  "x": "Neutral",
                                                  "y": 0,
                                                },
                                                Object {
                                                  "color": "red",
                                                  "x": "Negative",
                                                  "y": 0,
                                                },
                                              ]
                        }
                        datePattern="%d-%b-%y"
                        height={350}
                        interpolate="linear"
                        lineData={Array []}
                        mouseMoveHandler={[Function]}
                        mouseOutHandler={[Function]}
                        mouseOverHandler={[Function]}
                        width={650}
                        xType="text"
                        y2Type="linear"
                        yType="linear"
            />
            <div
                        className="inner-grid"
            >
                        <p />
                        <p />
                        <p />
            </div>
            <PieChart
                        clickHandler={[Function]}
                        data={
                                    Array [
                                                Object {
                                                  "key": "Positive",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "key": "Negative",
                                                  "value": NaN,
                                                },
                                              ]
                        }
                        innerHoleSize={0}
                        labels={true}
                        mouseMoveHandler={[Function]}
                        mouseOutHandler={[Function]}
                        mouseOverHandler={[Function]}
                        padding={2}
                        size={400}
                        styles={Object {}}
            />
            <Button
                        buttonText="Choose another topic"
                        handleSubmit={[Function]}
            />
</div>,
          <div>
            <SubHeader
                        id="negativeTweet-subheader"
                        subHeaderText="Most Negative Tweet"
            />
            <TwitterTweetEmbed
                        id="negativeTweet"
                        tweetId="02392039420"
            />
</div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SubHeader
                id="positiveTweet-subheader"
                subHeaderText="Most Positive Tweet"
/>,
              <TwitterTweetEmbed
                id="positiveTweet"
                tweetId="102389292"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "positiveTweet-subheader",
                "subHeaderText": "Most Positive Tweet",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "positiveTweet",
                "tweetId": "102389292",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SubHeader
                id="main-subheader"
                subHeaderText="So, the world thinks..."
/>,
              <Sentiment
                average_sentiment="negative"
/>,
              <BarChart
                axes={false}
                axisLabels={
                                Object {
                                                "x": "",
                                                "y": "",
                                              }
                }
                barWidth={10}
                clickHandler={[Function]}
                data={
                                Array [
                                                Object {
                                                  "color": "green",
                                                  "x": "Positive",
                                                  "y": 0,
                                                },
                                                Object {
                                                  "color": "yellow",
                                                  "x": "Neutral",
                                                  "y": 0,
                                                },
                                                Object {
                                                  "color": "red",
                                                  "x": "Negative",
                                                  "y": 0,
                                                },
                                              ]
                }
                datePattern="%d-%b-%y"
                height={350}
                interpolate="linear"
                lineData={Array []}
                mouseMoveHandler={[Function]}
                mouseOutHandler={[Function]}
                mouseOverHandler={[Function]}
                width={650}
                xType="text"
                y2Type="linear"
                yType="linear"
/>,
              <div
                className="inner-grid"
>
                <p />
                <p />
                <p />
</div>,
              <PieChart
                clickHandler={[Function]}
                data={
                                Array [
                                                Object {
                                                  "key": "Positive",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "key": "Negative",
                                                  "value": NaN,
                                                },
                                              ]
                }
                innerHoleSize={0}
                labels={true}
                mouseMoveHandler={[Function]}
                mouseOutHandler={[Function]}
                mouseOverHandler={[Function]}
                padding={2}
                size={400}
                styles={Object {}}
/>,
              <Button
                buttonText="Choose another topic"
                handleSubmit={[Function]}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "main-subheader",
                "subHeaderText": "So, the world thinks...",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "average_sentiment": "negative",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "axes": false,
                "axisLabels": Object {
                  "x": "",
                  "y": "",
                },
                "barWidth": 10,
                "clickHandler": [Function],
                "data": Array [
                  Object {
                    "color": "green",
                    "x": "Positive",
                    "y": 0,
                  },
                  Object {
                    "color": "yellow",
                    "x": "Neutral",
                    "y": 0,
                  },
                  Object {
                    "color": "red",
                    "x": "Negative",
                    "y": 0,
                  },
                ],
                "datePattern": "%d-%b-%y",
                "height": 350,
                "interpolate": "linear",
                "lineData": Array [],
                "mouseMoveHandler": [Function],
                "mouseOutHandler": [Function],
                "mouseOverHandler": [Function],
                "width": 650,
                "xType": "text",
                "y2Type": "linear",
                "yType": "linear",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p />,
                  <p />,
                  <p />,
                ],
                "className": "inner-grid",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 0,
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 0,
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 0,
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "clickHandler": [Function],
                "data": Array [
                  Object {
                    "key": "Positive",
                    "value": undefined,
                  },
                  Object {
                    "key": "Negative",
                    "value": NaN,
                  },
                ],
                "innerHoleSize": 0,
                "labels": true,
                "mouseMoveHandler": [Function],
                "mouseOutHandler": [Function],
                "mouseOverHandler": [Function],
                "padding": 2,
                "size": 400,
                "styles": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "buttonText": "Choose another topic",
                "handleSubmit": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SubHeader
                id="negativeTweet-subheader"
                subHeaderText="Most Negative Tweet"
/>,
              <TwitterTweetEmbed
                id="negativeTweet"
                tweetId="02392039420"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "negativeTweet-subheader",
                "subHeaderText": "Most Negative Tweet",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "negativeTweet",
                "tweetId": "02392039420",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
